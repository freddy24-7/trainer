generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             Int              @id @default(autoincrement())
  clerkId        String?          @unique
  username       String?          @unique
  role           Role             @default(TRAINER)
  createdAt      DateTime         @default(now())
  teamId         Int?
  team           Team?            @relation(fields: [teamId], references: [id])
  MatchPlayer    MatchPlayer[]
  TrainingPlayer TrainingPlayer[] // Relation to track player's attendance in trainings
}

model Team {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  players        User[]
  poules         Poule[]          @relation("PrimaryTeam")
  PouleOpponents PouleOpponents[]
}

model Poule {
  id        Int              @id @default(autoincrement())
  name      String           @unique
  teamId    Int
  team      Team             @relation("PrimaryTeam", fields: [teamId], references: [id])
  opponents PouleOpponents[]
  createdAt DateTime         @default(now())
}

model PouleOpponents {
  id      Int     @id @default(autoincrement())
  pouleId Int
  teamId  Int
  poule   Poule   @relation(fields: [pouleId], references: [id])
  team    Team    @relation(fields: [teamId], references: [id])
  Match   Match[]
}

model Match {
  id              Int            @id @default(autoincrement())
  pouleOpponentId Int
  pouleOpponent   PouleOpponents @relation(fields: [pouleOpponentId], references: [id])
  date            DateTime
  matchPlayers    MatchPlayer[]
  createdAt       DateTime       @default(now())
}

model MatchPlayer {
  id        Int     @id @default(autoincrement())
  matchId   Int
  userId    Int
  minutes   Int
  available Boolean
  match     Match   @relation(fields: [matchId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@unique([matchId, userId])
}

model Training {
  id              Int              @id @default(autoincrement())
  date            DateTime
  trainingPlayers TrainingPlayer[]
  createdAt       DateTime         @default(now())
}

model TrainingPlayer {
  id         Int      @id @default(autoincrement())
  trainingId Int
  userId     Int
  absent     Boolean
  training   Training @relation(fields: [trainingId], references: [id])
  user       User     @relation(fields: [userId], references: [id])

  @@unique([trainingId, userId])
}

enum Role {
  TRAINER
  PLAYER
}
